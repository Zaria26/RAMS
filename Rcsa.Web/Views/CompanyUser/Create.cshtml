@using Rcsa.Web.Models
@model Rcsa.Web.Models.RegisterModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_SubLayout.cshtml";
    var db = new RcsaDb();
    int compId = Convert.ToInt32(ViewBag.compId) != 0 ? Convert.ToInt32(ViewBag.compId) : 0;
    int currentUserId = WebSecurity.CurrentUserId;
    if (User.IsInRole("Manager") || User.IsInRole("User"))
    {
        var users = db.CompanyUsers.FirstOrDefault(x => x.UserId == currentUserId);
    }
    
    
}

<script>

    function dlValue() {
        var dlValue = $('#companyUserType option:selected').val();
        $('#hfuType').val(dlValue);
    }
</script>

<h3 class="upcoming-head" style="margin-bottom: 5px; text-align: center">Create Company User </h3>
@using (Html.BeginForm())
{
    <div class="form1">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <fieldset>
            <input type="hidden" value="@compId" id="hfCompanyId" name="hfCompanyId" />
            <input type="hidden" id="hfuType" name="hfuType" value="" />
            <label>User Name <span class="requiredFields">*</span></label>
            @Html.TextBoxFor(m => m.UserName, new { placeholder = "User name", autofocus = "", @MaxLength = "25" })
            <div class="clear"></div>
            @if (!User.IsInRole("Manager") || User.IsInRole("User"))
            {                            
                <label>User Type <span class="requiredFields">*</span></label>
                <select id="companyUserType" name="companyUserType" style="height: 36px; width: 348px;" onchange="dlValue();">
                    <option value="">Select</option>
                    <option value="User">User</option>
                    <option value="Manager">Manager</option>
                </select>
                <div class="clear"></div>
            }
            <div class="clear"></div>
            <label>First Name <span class="requiredFields">*</span></label>
            @Html.TextBoxFor(m => m.FirstName, new { placeholder = "First name", @MaxLength = "50" })
            <div class="clear"></div>
            <label>Last Name <span class="requiredFields">*</span></label>
            @Html.TextBoxFor(m => m.LastName, new { placeholder = "Last name", @MaxLength = "50" })
            <div class="clear"></div>
            <label>Email Id <span class="requiredFields">*</span></label>
            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", autocomplete = "off", @MaxLength = "30" })
            <div class="clear"></div>

            <label>Password <span class="requiredFields">*</span></label>
            @Html.PasswordFor(m => m.Password, new { placeholder = "Password", @MaxLength = "15" })
            <div class="clear"></div>

            <label>Re-Password </label>
            @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Re Password", @MaxLength = "15" })
            <div class="clear"></div>
            <br />
            <label>&nbsp;</label>
            <button id="btnSave" value="Save" class="button1">Save</button>
            &nbsp;&nbsp;
            <button id="btnReset" value="Reset" type="reset" class="button1">Reset</button>
        </fieldset>
        <div class="clear"></div>
        @if (@ViewBag.Status != null)
        {
            <div class="success">
                @ViewBag.Status
            </div>
        }
    </div>
}
